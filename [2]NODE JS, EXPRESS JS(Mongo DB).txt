				inflearn react

‣NODE JS(server side에서 쓸 수 있는 언어), EXPRESS JS(NODE JS를 쉽게 이용할 수 있게 해주는 프레임워크) 설치하기

1. node js 구글 검색 후 다운로드(안정성 높은 것)
-> 설치 후 cmd 창 #node -v   (버전 확인)
-> #node                   // node js 실행


2. EXPRESS JS
-> 사용할 폴더에서 파워셀
-> #npm init                  (npm WARN enoent ENOENT: ~~ // error 가 나오면 해당 명령어 실행)
-> vs에서 해당 폴더 열기
-> VS에서 ctrl + ` 으로 터미널 실행
-> #npm install express --save  




///////////////////////index.js "hello world" //////////////////////////////////////////////

const express = require('express')               // 다운 받은 express를 가져온다
const app = express()                                  // express() 를 이용해서 app을 만든다
const port = 3000                                       

app.get('/', (req, res) => {
  res.send('Hello World!')
})

app.listen(port, () => {
  console.log(`Example app listening at http://localhost:${port}`)
})



<package.json>
"scripts": {
	"start": "node index.js"
	"test": "echo \"Error: no test specified\" && exit 1"
},

-> VS
#npm run start
#url에서 localhost:5000 입력하면 "Hello world!" 실행을 확인할 수 있다. 

////////////////////////////////////////////////////////////////////////////////////////////////




<mongo db>

#npm install mongoose --save


코드 >
const express = require('express')
const app = express()
const port = 5000

const mongoose = require('mongoose')
mongoose.connect('mongodb+srv://gyuhwan:1234@boilerplate.bipfw.mongodb.net/dbname?retryWrites=true&w=majority', {
    useNewUrlParser: true, useUnifiedTopology: true, useCreateIndex: true, useFindAndModify: false
}).then(() => console.log('MongoDB Connected...'))
    .catch(err => console.log(err))



app.get('/', (req, res) => {
    res.send('Hello World!')
})

app.listen(port, () => {
    console.log(`Example app listening at http://localhost:${port}`)
})